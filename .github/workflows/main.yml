name: CI - MLFlow

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  train_model:
    runs-on: ubuntu-latest

    steps:
    - name: Run actions/checkout@v4
      uses: actions/checkout@v4

    - name: Set up Python 3.12.7
      uses: actions/setup-python@v5
      with:
        python-version: 3.12.7

    - name: Check Env
      run: |
        python --version
        pip --version

    - name: Install dependencies
      run: |
        pip install -r MLProject/requirements.txt

    - name: Run mlflow project
      run: |
        cd MLProject
        python modelling.py

    - name: Get latest MLflow run_id
      id: get_run_id
      run: |
        export MLFLOW_TRACKING_URI=file:./mlruns
        experiment_name="Personality Classification Non Tuning"

        # Get experiment ID by name (new MLflow command)
        experiment_id=$(mlflow experiments search --query "name = '$experiment_name'" | grep -oP "(?<=experiment_id: ')[^']+")
        if [ -z "$experiment_id" ]; then
          echo "Experiment ID not found for '$experiment_name'"
          exit 1
        fi

        echo "Found experiment_id: $experiment_id"

        # Get latest run ID (alternative method)
        run_id=$(mlflow runs list --experiment-id "$experiment_id" --order-by "attribute.start_time DESC" --limit 1 | grep -oP "(?<=run_id: ')[^']+")
        if [ -z "$run_id" ]; then
          echo "Failed to get run_id"
          exit 1
        fi

        echo "Latest run_id: $run_id"
        echo "MLFLOW_RUN_ID=$run_id" >> $GITHUB_ENV
        
    - name: Install python dependencies
      run: |
        pip install requests

    - name: Upload to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: mlartifacts
        path: MLProject/mlartifacts

    - name: Build Docker Model
      run: |
        cd MLProject
        mlflow models build-docker -m "runs:/${{ env.MLFLOW_RUN_ID }}/model" -n personality-image

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

    - name: üè∑Tag Docker Image
      run: docker tag personality-image ${{ secrets.DOCKERHUB_USERNAME }}/personality-image:latest

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/personality-image:latest

    - name: Post Log in to Docker Hub
      run: docker logout
